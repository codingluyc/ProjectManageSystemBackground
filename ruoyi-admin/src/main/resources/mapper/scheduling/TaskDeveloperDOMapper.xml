<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.scheduling.mapper.TaskDeveloperDOMapper">
    
    <resultMap type="TaskDeveloperDO" id="TaskDeveloperDOResult">
        <result property="id"    column="id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="projectId"    column="project_id"    />
        <result property="moduleId"    column="module_id"    />
        <result property="taskId"    column="task_id"    />
        <result property="developerId"    column="developer_id"    />
        <result property="startDate"    column="start_date"    />
        <result property="endDate"    column="end_date"    />
        <result property="state"    column="state"    />
    </resultMap>

    <sql id="selectTaskDeveloperDOVo">
        select
            td.id,
            td.create_time,
            td.update_time,
            td.create_by,
            td.update_by,
            td.project_id,
            td.module_id,
            td.task_id,
            td.developer_id,
            td.start_date,
            td.end_date,
            td.state,
            t.name as task_name,
            m.name as module_name,
            p.project_name,
            u.nick_name as developer_name
        from task_developer td
            left join task t on t.id = td.task_id
            left join module m on m.id = td.module_id
            left join project p on p.id = td.project_id
            left join sys_user u on u.user_id = td.developer_id
    </sql>

    <select id="selectTaskDeveloperDOList" parameterType="TaskDeveloperDO" resultMap="TaskDeveloperDOResult">
        <include refid="selectTaskDeveloperDOVo"/>
        <where>  
            <if test="projectId != null "> and td.project_id = #{projectId}</if>
            <if test="moduleId != null "> and td.module_id = #{moduleId}</if>
            <if test="taskId != null "> and td.task_id = #{taskId}</if>
            <if test="developerId != null "> and td.developer_id = #{developerId}</if>
            <if test="startDate != null "> and td.start_date = #{startDate}</if>
            <if test="endDate != null "> and td.end_date = #{endDate}</if>
            <if test="state != null  and state != ''"> and td.state = #{state}</if>
            <if test="developerName!= null and developerName!= ''"> and u.nick_name like concat('%', #{developerName}, '%')</if>
        </where>
    </select>
    
    <select id="selectTaskDeveloperDOById" parameterType="Long" resultMap="TaskDeveloperDOResult">
        <include refid="selectTaskDeveloperDOVo"/>
        where td.id = #{id}
    </select>

    <insert id="insertTaskDeveloperDO" parameterType="TaskDeveloperDO" useGeneratedKeys="true" keyProperty="id">
        insert into task_developer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="projectId != null">project_id,</if>
            <if test="moduleId != null">module_id,</if>
            <if test="taskId != null">task_id,</if>
            <if test="developerId != null">developer_id,</if>
            <if test="startDate != null">start_date,</if>
            <if test="endDate != null">end_date,</if>
            <if test="state != null">state,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="projectId != null">#{projectId},</if>
            <if test="moduleId != null">#{moduleId},</if>
            <if test="taskId != null">#{taskId},</if>
            <if test="developerId != null">#{developerId},</if>
            <if test="startDate != null">#{startDate},</if>
            <if test="endDate != null">#{endDate},</if>
            <if test="state != null">#{state},</if>
         </trim>
    </insert>
    <insert id="insertTaskDeveloperDOByBatch">
        insert into task_developer(
            create_time,
            update_time,
            create_by,
            update_by,
            project_id,
            module_id,
            task_id,
            developer_id,
            start_date,
            end_date,
            state
        )values
        <foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.createTime},
                #{item.updateTime},
                #{item.createBy},
                #{item.updateBy},
                #{item.projectId},
                #{item.moduleId},
                #{item.taskId},
                #{item.developerId},
                #{item.startDate},
                #{item.endDate},
                #{item.state}
            )
        </foreach>
    </insert>

    <update id="updateTaskDeveloperDO" parameterType="TaskDeveloperDO">
        update task_developer
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="moduleId != null">module_id = #{moduleId},</if>
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="developerId != null">developer_id = #{developerId},</if>
            <if test="startDate != null">start_date = #{startDate},</if>
            <if test="endDate != null">end_date = #{endDate},</if>
            <if test="state != null">state = #{state},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTaskDeveloperDOById" parameterType="Long">
        delete from task_developer where id = #{id}
    </delete>

    <delete id="deleteTaskDeveloperDOByIds" parameterType="String">
        delete from task_developer where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>