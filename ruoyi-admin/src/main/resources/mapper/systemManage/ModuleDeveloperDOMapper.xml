<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ModuleDeveloperDOMapper">
    
    <resultMap type="ModuleDeveloperDO" id="ModuleDeveloperDOResult">
        <result property="id"    column="id"    />
        <result property="moduleId"    column="module_id"    />
        <result property="devType"    column="dev_type"    />
        <result property="userId"    column="user_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectModuleDeveloperDOVo">
        select id, module_id, dev_type, user_id, create_time, update_time, create_by, update_by from module_developer
    </sql>

    <select id="selectModuleDeveloperDOList" parameterType="ModuleDeveloperDO" resultMap="ModuleDeveloperDOResult">
        <include refid="selectModuleDeveloperDOVo"/>
        <where>  
            <if test="moduleId != null "> and module_id = #{moduleId}</if>
            <if test="devType != null  and devType != ''"> and dev_type = #{devType}</if>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
        </where>
    </select>
    
    <select id="selectModuleDeveloperDOById" parameterType="Long" resultMap="ModuleDeveloperDOResult">
        <include refid="selectModuleDeveloperDOVo"/>
        where id = #{id}
    </select>

    <insert id="insertModuleDeveloperDO" parameterType="ModuleDeveloperDO" useGeneratedKeys="true" keyProperty="id">
        insert into module_developer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">module_id,</if>
            <if test="devType != null">dev_type,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="moduleId != null">#{moduleId},</if>
            <if test="devType != null">#{devType},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateModuleDeveloperDO" parameterType="ModuleDeveloperDO">
        update module_developer
        <trim prefix="SET" suffixOverrides=",">
            <if test="moduleId != null">module_id = #{moduleId},</if>
            <if test="devType != null">dev_type = #{devType},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteModuleDeveloperDOById" parameterType="Long">
        delete from module_developer where id = #{id}
    </delete>

    <delete id="deleteModuleDeveloperDOByIds" parameterType="String">
        delete from module_developer where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>